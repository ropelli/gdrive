name: Build and upload release (arm64 linux)

on:
  release:
    types: [created]

env:
  APP_NAME: gdrive
  ARCHIVE_NAME: gdrive_linux-arm64.tar.gz

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare upload url
        run: |
          UPLOAD_URL="$(jq -r '.release.upload_url' "$GITHUB_EVENT_PATH" | sed -e "s/{?name,label}$/?name=${ARCHIVE_NAME}/")"
          echo "UPLOAD_URL=$UPLOAD_URL" >> $GITHUB_ENV

      - name: Build application
        run: |
          docker build -t cargo-arm64-build -f - . <<EOF
            FROM ubuntu:22.04
            RUN apt-get update && apt-get install -y \
                build-essential \
                curl \
                gcc-aarch64-linux-gnu \
                && rm -rf /var/lib/apt/lists/* \
                && curl https://sh.rustup.rs -o rustup.sh \
                && chmod 755 rustup.sh \
                && ./rustup.sh -y -t aarch64-unknown-linux-gnu
            WORKDIR /workspace
            ENTRYPOINT ["/root/.cargo/bin/cargo"]
          EOF
          docker run --rm -t -v $HOME/.cargo/registry/:/root/.cargo/registry -v "$(pwd)":/workspace cargo-arm64-build build --release --target aarch64-unknown-linux-gnu

      - name: Create archive
        run: |
          tar -czf $ARCHIVE_NAME -C target/aarch64-unknown-linux-gnu/release $APP_NAME

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ env.ARCHIVE_NAME }}
          asset_name: ${{ env.ARCHIVE_NAME }}
          asset_content_type: application/gzip
